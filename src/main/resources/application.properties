# Application
spring.application.name=${SPRING_APP_NAME:companies-keycloak}
server.port=${APP_PORT:8081}

# Database (Postgres)
spring.datasource.url=jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DB_COMPANIES:companies}
spring.datasource.username=${POSTGRES_USER:root}
spring.datasource.password=${POSTGRES_PASSWORD:root}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA / Hibernate
# Testing
# This will drop any table in the database
# and create new ones based on the models
# Example: JPA_HIBERNATE_DDL_AUTO=create-drop
spring.jpa.hibernate.ddl-auto=${JPA_HIBERNATE_DDL_AUTO:create-drop}

# Development
# This will update table schemas based on the models,
# but will not remove columns that no longer exist
# in the models, it will just add new columns if needed.
# Example: JPA_HIBERNATE_DDL_AUTO=update

# Production
# Do not let Hibernate manage schema in production.
# Example: JPA_HIBERNATE_DDL_AUTO=none

# Show generated queries in logs - Spring Boot uses logback
spring.jpa.show-sql=${JPA_SHOW_SQL:true}
logging.level.org.hibernate.SQL=${HIBERNATE_SQL_LOG:DEBUG}
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=${HIBERNATE_BIND_LOG:TRACE}
